---
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

import Pagination from "@/components/Paginator.astro";
import CollectionPreview from "@/components/CollectionPreview.astro";
import PageLayout from "@/layouts/Base.astro";

// Using static generation for reliable content
export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
	try {
		// Directly use getCollection for more reliable data fetching
		const gardenEntries = await getCollection("garden");

		// Sort by date (newest first)
		const sortedEntries = gardenEntries.sort((a, b) => {
			const aDate = new Date(a.data.updatedDate ?? a.data.publishDate).valueOf();
			const bDate = new Date(b.data.updatedDate ?? b.data.publishDate).valueOf();
			return bDate - aDate;
		});

		// Get unique tags
		const uniqueTags = [...new Set(sortedEntries.flatMap((entry) => entry.data.tags || []))];

		// Return paginated data
		return paginate(sortedEntries, {
			pageSize: 10,
			props: { uniqueTags },
		});
	} catch (error) {
		console.error("Error in getStaticPaths:", error);
		// Return empty data if there's an error
		return paginate([], { pageSize: 10, props: { uniqueTags: [] } });
	}
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"garden">>;
	uniqueTags: string[];
}

const { page, uniqueTags = [] } = Astro.props;

const meta = {
	description: "My collection of topics, thoughts, and a personal wiki of things I'm learning",
	title: "Garden",
};

const paginationProps = page.url
	? {
			...(page.url.prev && {
				prevUrl: {
					text: `‚Üê Previous Garden`,
					url: page.url.prev,
				},
			}),
			...(page.url.next && {
				nextUrl: {
					text: `Next Garden ‚Üí`,
					url: page.url.next,
				},
			}),
		}
	: {};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6">Garden ü™¥</h1>
	<p>
		a compendium of topics, subjects, thoughts, and catchall for the many things i'm learning or
		hyper-focused on. this is the true commonplace aspect of the entire site. some call it their
		garden or personal wiki. this is mine.
	</p><br />----<br />

	<div class="grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8">
		<section aria-label="Garden list">
			{
				page.data.length > 0 ? (
					<ul class="space-y-8 text-start">
						{page.data.map((c) => (
							<li class="flex flex-col flex-wrap gap-2 sm:flex-row [&_q]:basis-full">
								<CollectionPreview as="h2" item={c} withDesc />
							</li>
						))}
					</ul>
				) : (
					<div>
						<p>No garden entries found.</p>
						<p class="mt-4 text-sm opacity-75">
							Please check your content directory or create new garden entries.
						</p>
					</div>
				)
			}
			<Pagination {...paginationProps} />
		</section>
		{
			uniqueTags.length > 0 && (
				<aside>
					<h2 class="mb-4 flex items-center text-lg font-semibold">
						<svg
							aria-hidden="true"
							class="h-6 w-6"
							fill="none"
							stroke="currentColor"
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="1.5"
							viewBox="0 0 24 24"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path d="M0 0h24v24H0z" fill="none" stroke="none" />
							<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
							<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
							<path d="M6 9h-.01" />
						</svg>
						Tags
					</h2>
					<ul class="flex flex-wrap gap-2 text-bgColor">
						{uniqueTags.map((tag) => (
							<li>
								<a
									aria-label={`View all garden with the tag: ${tag}`}
									class="flex items-center justify-center rounded-lg bg-accent p-1"
									href={`/tags/${tag}/`}
								>
									{tag}
								</a>
							</li>
						))}
					</ul>
					<span class="mt-4 block sm:text-end">
						<a aria-label="View all blog categories" class="sm:hover:text-accent" href="/tags/">
							View all ‚Üí
						</a>
					</span>
				</aside>
			)
		}
	</div>
</PageLayout>
